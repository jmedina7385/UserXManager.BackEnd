// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationCoreContext))]
    internal class ApplicationCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Core.Permission", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("EmployeeLastName")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("EmployeeName")
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("PermissionDate")
                    .HasColumnType("datetime2");

                b.Property<int>("PermissionTypeId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("PermissionTypeId");

                b.ToTable("Permissions");
            });

            modelBuilder.Entity("Core.PermissionType", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("PermissionTypes");
            });

            modelBuilder.Entity("Core.Permission", b =>
            {
                b.HasOne("Core.PermissionType", "PermissionType")
                    .WithMany()
                    .HasForeignKey("PermissionTypeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("PermissionType");
            });
#pragma warning restore 612, 618
        }
    }
}